import { existsSync, mkdirSync, readFileSync, writeFileSync } from "node:fs";
import { createRequire } from "node:module";
import path from "node:path";
import { cwd } from "node:process";
import { generateCss, svg2woff2 } from "../src/main";
import type { GenerateCssOptions, SvgFontParameters, TtfFontParameters } from "../src/main";
import { svg2svgfont, svg2ttf } from "../src/svg2woff2";

const require = createRequire(import.meta.url);

// read svg files
const base_dir = path.join(path.dirname(require.resolve("@fortawesome/fontawesome-free/package.json")), "svgs/brands/");
const svg_files = ["youtube", "github", "x-twitter"];
const svgs = svg_files.map((name) => {
    const filepath = path.join(base_dir, `${name}.svg`);
    const content = readFileSync(filepath, "utf8");
    return { name, content };
});

// convert to woff2
const svg_font_opt: SvgFontParameters = {
    font_family: "hanabi brands",
};

const ttf_font_opt: TtfFontParameters = {
    version: "1.0",
    description: "font generated by svg2woff2",
    url: "https://github.com/osawa-naotaka/svg2woff2.git",
    ts: 0,
};

const css_opt: GenerateCssOptions = {
    font_family: svg_font_opt.font_family,
    font_url: "hf-builtin-400.woff2",
    vertical_align: "-0.125em",
};

const svgfont = await svg2svgfont(svgs, { svg_font_opt: svg_font_opt, ttf_font_opt });
const ttf = await svg2ttf(svgs, { svg_font_opt: svg_font_opt, ttf_font_opt });
const woff2 = await svg2woff2(svgs, { svg_font_opt: svg_font_opt, ttf_font_opt });
const css = generateCss(svgs, css_opt);

console.log(`generateWoff2(): Buffer size = ${woff2.length}`);
console.log("Generated WOFF2 Data (base64):", woff2.toString("base64"));
console.log("Generated CSS:", css);

// write to files
const output_dir = path.join(cwd(), "build");
if (existsSync(output_dir) === false) {
    mkdirSync(output_dir);
}
writeFileSync(path.join(output_dir, "hf-builtin-400.svg"), svgfont);
writeFileSync(path.join(output_dir, "hf-builtin-400.ttf"), ttf);
writeFileSync(path.join(output_dir, "hf-builtin-400.woff2"), woff2);
writeFileSync(path.join(output_dir, "font.css"), css);
